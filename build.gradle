plugins {
	id 'application'
	id 'checkstyle'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.liquibase.gradle' version '2.2.0'
	id 'com.github.johnrengelman.processes' version '0.5.0'
	id 'org.springdoc.openapi-gradle-plugin' version '1.6.0'
	id 'org.siouan.frontend-jdk11' version '6.0.0'
	id 'jacoco'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'

//java {
//	sourceCompatibility = '20'
//}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(20)
	}
}

compileJava {
	options.release = 20
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation(
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-security')

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'com.github.database-rider:rider-junit5:1.36.0'
	testImplementation(platform("org.junit:junit-bom:5.10.0"))
	testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("org.springframework.security:spring-security-test")
	testImplementation("net.javacrumbs.json-unit:json-unit-assertj:3.2.2")

	implementation("net.datafaker:datafaker:2.0.1")
	implementation("org.instancio:instancio-junit:3.3.0")
}

tasks.named('test') {
	useJUnitPlatform()
}

task stage(dependsOn: ['clean', 'installDist'])

jacocoTestReport {
	reports {
		xml.required = true
	}
}

test {
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
}

checkstyle {
	toolVersion '10.12.1'
}

checkstyleMain.source = "src/main/java"
checkstyleTest.source =  "src/test/java"

application {
	mainClass = 'hexlet.code.AppApplication'
}

wrapper{
	gradleVersion = '8.3'
}
