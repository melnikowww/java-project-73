plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'application'
	id 'jacoco'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'

//java {
//	sourceCompatibility = '20'
//}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(20)
	}
}

compileJava {
	options.release = 20
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task stage(dependsOn: ['clean', 'installDist'])

jacocoTestReport {
	reports {
		xml.required = true
	}
}

test {
	finalizedBy jacocoTestReport
}
jacocoTestReport {
	dependsOn test
}
